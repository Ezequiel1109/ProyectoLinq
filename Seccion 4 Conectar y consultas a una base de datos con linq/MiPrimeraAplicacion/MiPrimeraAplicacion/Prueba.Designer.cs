//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 28-01-2021 21:16:54
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace CursoLinQ1Context
{

    [DatabaseAttribute(Name = "CursoLinQ1")]
    [ProviderAttribute(typeof(Devart.Data.SqlServer.Linq.Provider.SqlDataProvider))]
    public partial class CursoLinQ1DataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(CursoLinQ1DataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertALUMNO(ALUMNO instance);
        partial void UpdateALUMNO(ALUMNO instance);
        partial void DeleteALUMNO(ALUMNO instance);

        #endregion

        public CursoLinQ1DataContext() :
        base(GetConnectionString("CursoLinQ1DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public CursoLinQ1DataContext(MappingSource mappingSource) :
        base(GetConnectionString("CursoLinQ1DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public CursoLinQ1DataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public CursoLinQ1DataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public CursoLinQ1DataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public CursoLinQ1DataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<ALUMNO> ALUMNOs
        {
            get
            {
                return this.GetTable<ALUMNO>();
            }
        }

        public Devart.Data.Linq.Table<Empleado> Empleados
        {
            get
            {
                return this.GetTable<Empleado>();
            }
        }
    }
}

namespace CursoLinQ1Context
{

    /// <summary>
    /// There are no comments for CursoLinQ1Context.ALUMNO in the schema.
    /// </summary>
    [Table(Name = @"dbo.ALUMNO")]
    public partial class ALUMNO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IDALUMNO;

        private string _NOMBREALUMNO;

        private string _APELLIDOPATERNOALUMNO;

        private string _APELLIDOMATERNOALUMNO;

        private int? _NOTA1;

        private int? _NOTA2;

        private int? _NOTA3;

        private int? _NOTA4;

        private string _CURSOFAVORITO;

        private string _NIVELACADEMICO;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDALUMNOChanging(int value);
        partial void OnIDALUMNOChanged();
        partial void OnNOMBREALUMNOChanging(string value);
        partial void OnNOMBREALUMNOChanged();
        partial void OnAPELLIDOPATERNOALUMNOChanging(string value);
        partial void OnAPELLIDOPATERNOALUMNOChanged();
        partial void OnAPELLIDOMATERNOALUMNOChanging(string value);
        partial void OnAPELLIDOMATERNOALUMNOChanged();
        partial void OnNOTA1Changing(int? value);
        partial void OnNOTA1Changed();
        partial void OnNOTA2Changing(int? value);
        partial void OnNOTA2Changed();
        partial void OnNOTA3Changing(int? value);
        partial void OnNOTA3Changed();
        partial void OnNOTA4Changing(int? value);
        partial void OnNOTA4Changed();
        partial void OnCURSOFAVORITOChanging(string value);
        partial void OnCURSOFAVORITOChanged();
        partial void OnNIVELACADEMICOChanging(string value);
        partial void OnNIVELACADEMICOChanged();
        #endregion

        public ALUMNO()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDALUMNO in the schema.
        /// </summary>
        [Column(Storage = "_IDALUMNO", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IDALUMNO
        {
            get
            {
                return this._IDALUMNO;
            }
            set
            {
                if (this._IDALUMNO != value)
                {
                    this.OnIDALUMNOChanging(value);
                    this.SendPropertyChanging("IDALUMNO");
                    this._IDALUMNO = value;
                    this.SendPropertyChanged("IDALUMNO");
                    this.OnIDALUMNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREALUMNO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREALUMNO", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREALUMNO
        {
            get
            {
                return this._NOMBREALUMNO;
            }
            set
            {
                if (this._NOMBREALUMNO != value)
                {
                    this.OnNOMBREALUMNOChanging(value);
                    this.SendPropertyChanging("NOMBREALUMNO");
                    this._NOMBREALUMNO = value;
                    this.SendPropertyChanged("NOMBREALUMNO");
                    this.OnNOMBREALUMNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOPATERNOALUMNO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOPATERNOALUMNO", DbType = "VARCHAR(100)", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOPATERNOALUMNO
        {
            get
            {
                return this._APELLIDOPATERNOALUMNO;
            }
            set
            {
                if (this._APELLIDOPATERNOALUMNO != value)
                {
                    this.OnAPELLIDOPATERNOALUMNOChanging(value);
                    this.SendPropertyChanging("APELLIDOPATERNOALUMNO");
                    this._APELLIDOPATERNOALUMNO = value;
                    this.SendPropertyChanged("APELLIDOPATERNOALUMNO");
                    this.OnAPELLIDOPATERNOALUMNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOMATERNOALUMNO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOMATERNOALUMNO", DbType = "VARCHAR(100)", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOMATERNOALUMNO
        {
            get
            {
                return this._APELLIDOMATERNOALUMNO;
            }
            set
            {
                if (this._APELLIDOMATERNOALUMNO != value)
                {
                    this.OnAPELLIDOMATERNOALUMNOChanging(value);
                    this.SendPropertyChanging("APELLIDOMATERNOALUMNO");
                    this._APELLIDOMATERNOALUMNO = value;
                    this.SendPropertyChanged("APELLIDOMATERNOALUMNO");
                    this.OnAPELLIDOMATERNOALUMNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOTA1 in the schema.
        /// </summary>
        [Column(Storage = "_NOTA1", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public int? NOTA1
        {
            get
            {
                return this._NOTA1;
            }
            set
            {
                if (this._NOTA1 != value)
                {
                    this.OnNOTA1Changing(value);
                    this.SendPropertyChanging("NOTA1");
                    this._NOTA1 = value;
                    this.SendPropertyChanged("NOTA1");
                    this.OnNOTA1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOTA2 in the schema.
        /// </summary>
        [Column(Storage = "_NOTA2", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public int? NOTA2
        {
            get
            {
                return this._NOTA2;
            }
            set
            {
                if (this._NOTA2 != value)
                {
                    this.OnNOTA2Changing(value);
                    this.SendPropertyChanging("NOTA2");
                    this._NOTA2 = value;
                    this.SendPropertyChanged("NOTA2");
                    this.OnNOTA2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOTA3 in the schema.
        /// </summary>
        [Column(Storage = "_NOTA3", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public int? NOTA3
        {
            get
            {
                return this._NOTA3;
            }
            set
            {
                if (this._NOTA3 != value)
                {
                    this.OnNOTA3Changing(value);
                    this.SendPropertyChanging("NOTA3");
                    this._NOTA3 = value;
                    this.SendPropertyChanged("NOTA3");
                    this.OnNOTA3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOTA4 in the schema.
        /// </summary>
        [Column(Storage = "_NOTA4", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public int? NOTA4
        {
            get
            {
                return this._NOTA4;
            }
            set
            {
                if (this._NOTA4 != value)
                {
                    this.OnNOTA4Changing(value);
                    this.SendPropertyChanging("NOTA4");
                    this._NOTA4 = value;
                    this.SendPropertyChanged("NOTA4");
                    this.OnNOTA4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CURSOFAVORITO in the schema.
        /// </summary>
        [Column(Storage = "_CURSOFAVORITO", DbType = "VARCHAR(100)", UpdateCheck = UpdateCheck.Never)]
        public string CURSOFAVORITO
        {
            get
            {
                return this._CURSOFAVORITO;
            }
            set
            {
                if (this._CURSOFAVORITO != value)
                {
                    this.OnCURSOFAVORITOChanging(value);
                    this.SendPropertyChanging("CURSOFAVORITO");
                    this._CURSOFAVORITO = value;
                    this.SendPropertyChanged("CURSOFAVORITO");
                    this.OnCURSOFAVORITOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NIVELACADEMICO in the schema.
        /// </summary>
        [Column(Storage = "_NIVELACADEMICO", DbType = "VARCHAR(100)", UpdateCheck = UpdateCheck.Never)]
        public string NIVELACADEMICO
        {
            get
            {
                return this._NIVELACADEMICO;
            }
            set
            {
                if (this._NIVELACADEMICO != value)
                {
                    this.OnNIVELACADEMICOChanging(value);
                    this.SendPropertyChanging("NIVELACADEMICO");
                    this._NIVELACADEMICO = value;
                    this.SendPropertyChanged("NIVELACADEMICO");
                    this.OnNIVELACADEMICOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for CursoLinQ1Context.Empleado in the schema.
    /// </summary>
    [Table(Name = @"dbo.Empleado")]
    public partial class Empleado
    {
        #pragma warning disable 0649

        private string _CODIGO;

        private string _NOMBRE;

        private string _APPATERNO;

        private string _APMATERNO;

        private int? _EDAD;
        #pragma warning restore 0649

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODIGOChanging(string value);
        partial void OnCODIGOChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPPATERNOChanging(string value);
        partial void OnAPPATERNOChanged();
        partial void OnAPMATERNOChanging(string value);
        partial void OnAPMATERNOChanged();
        partial void OnEDADChanging(int? value);
        partial void OnEDADChanged();
        #endregion

        public Empleado()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODIGO in the schema.
        /// </summary>
        [Column(Storage = "_CODIGO", DbType = "VARCHAR(8)", UpdateCheck = UpdateCheck.Never)]
        public string CODIGO
        {
            get
            {
                return this._CODIGO;
            }
            set
            {
                if (this._CODIGO != value)
                {
                    this._CODIGO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", DbType = "NCHAR(10)", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this._NOMBRE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APPATERNO in the schema.
        /// </summary>
        [Column(Storage = "_APPATERNO", DbType = "NCHAR(10)", UpdateCheck = UpdateCheck.Never)]
        public string APPATERNO
        {
            get
            {
                return this._APPATERNO;
            }
            set
            {
                if (this._APPATERNO != value)
                {
                    this._APPATERNO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APMATERNO in the schema.
        /// </summary>
        [Column(Storage = "_APMATERNO", DbType = "NCHAR(10)", UpdateCheck = UpdateCheck.Never)]
        public string APMATERNO
        {
            get
            {
                return this._APMATERNO;
            }
            set
            {
                if (this._APMATERNO != value)
                {
                    this._APMATERNO = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [Column(Storage = "_EDAD", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public int? EDAD
        {
            get
            {
                return this._EDAD;
            }
            set
            {
                if (this._EDAD != value)
                {
                    this._EDAD = value;
                }
            }
        }
    }

}
